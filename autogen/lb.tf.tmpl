/*
# VPC
resource "google_compute_network" "ilb_network" {
  name                    = "l4-ilb-network"
  provider                = google-beta
  auto_create_subnetworks = false
}

# backend subnet
resource "google_compute_subnetwork" "ilb_subnet" {
  name          = "l4-ilb-subnet"
  provider      = google-beta
  ip_cidr_range = "10.0.1.0/24"
  region        = var.region
  network       = var.network
}
*/

# forwarding rule
resource "google_compute_forwarding_rule" "google_compute_forwarding_rule" {
  project               = var.project_id
  name                  = "l4-ilb-forwarding-rule"
  backend_service       = google_compute_region_backend_service.gcve_mon.id
  provider              = google-beta
  region                = var.region
  ip_protocol           = "TCP"
  load_balancing_scheme = "INTERNAL"
  all_ports             = true
  allow_global_access   = true
  network               = var.network
  subnetwork            = var.subnetwork
}

# backend service
resource "google_compute_region_backend_service" "gcve_mon" {
  project               = var.project_id
  name                  = "l4-ilb-backend-gcve-mon-subnet"
  provider              = google-beta
  region                = var.region
  protocol              = "TCP"
  load_balancing_scheme = "INTERNAL"
  health_checks         = [google_compute_region_health_check.default.id]
  backend {
    group          = google_compute_region_instance_group_manager.gcve_mon_mig.instance_group
    balancing_mode = "CONNECTION"
  }
}

# health check
resource "google_compute_region_health_check" "default" {
  project  = var.project_id
  name     = "l4-ilb-gcve-mon-hc"
  provider = google-beta
  region   = var.region
  tcp_health_check {
    port = "5142"
  }
}

# MIG
resource "google_compute_region_instance_group_manager" "gcve_mon_mig" {
  project  = var.project_id
  name     = "l4-ilb-gcve-mon-mig1"
  provider = google-beta
  region   = var.region
  version {
    instance_template = google_compute_instance_template.gcve_mon.id
    name              = "primary"
  }
  base_instance_name = "gcve-mon"
  target_size        = 2
}

# allow all access from health check ranges
resource "google_compute_firewall" "fw_hc" {
  project  = var.project_id
  name          = "l4-ilb-fw-allow-gcve-mon-hc"
  provider      = google-beta
  direction     = "INGRESS"
  network       = var.network
  source_ranges = ["130.211.0.0/22", "35.191.0.0/16", "35.235.240.0/20"]
  allow {
    protocol = "tcp"
  }
  target_tags = ["allow-health-check"]
}

# allow communication within the subnet
resource "google_compute_firewall" "fw_ilb_to_backends" {
  project      = var.project_id
  name          = "l4-ilb-fw-allow-ilb-to-backends"
  provider      = google-beta
  direction     = "INGRESS"
  network       = var.network
  source_ranges = ["10.0.1.0/24"]
  allow {
    protocol = "tcp"
  }
  allow {
    protocol = "udp"
  }
  allow {
    protocol = "icmp"
  }
}

# allow SSH
resource "google_compute_firewall" "fw_ilb_ssh" {
  project   = var.project_id
  name      = "l4-ilb-fw-ssh"
  provider  = google-beta
  direction = "INGRESS"
  network   = var.network
  allow {
    protocol = "tcp"
    ports    = ["22"]
  }
  target_tags   = ["allow-ssh"]
  source_ranges = ["0.0.0.0/0"]
}


/*
# test instance
resource "google_compute_instance" "gcve_mon" {
  name         = "l4-ilb-test-vm"
  provider     = google-beta
  zone         = va
  machine_type = "e2-small"
  network_interface {
    network    = google_compute_network.ilb_network.id
    subnetwork = google_compute_subnetwork.ilb_subnet.id
  }
  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-10"
    }
  }
}
*/