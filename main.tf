#-------------------------------------------------------
# GCVE Monitor Agent
#-------------------------------------------------------
 
locals {
  vc_proj = var.vc_project == "" ? var.project_id : var.vc_project

  startup_script = <<EOF
#!/bin/bash
apt update
apt -yq upgrade
cd /tmp
curl -S https://storage.googleapis.com/gcve-observability-agent/latest/vmware-linux-amd64/artifacts/bpagent-headless-vmware.tar.gz > agent.tar.gz
curl -S https://storage.googleapis.com/gcve-observability-agent/latest/vmware-linux-amd64/installer/install.sh > install.sh
sh install.sh agent.tar.gz
cp /opt/bpagent/config/metrics/examples/vmware_vcenter.yaml /opt/bpagent/config/metrics/sources
export SECRET=$(gcloud secrets versions access 1 --secret=${var.vc_secret})
sed -i "s/host: localhost/host: ${var.vc_host}/g" /opt/bpagent/config/metrics/sources/vmware_vcenter.yaml
sed -i "s/password: PASSWORD/password: $SECRET/g" /opt/bpagent/config/metrics/sources/vmware_vcenter.yaml
sed -i "s/username: USERNAME/username: ${var.vc_user}/g" /opt/bpagent/config/metrics/sources/vmware_vcenter.yaml
cp /opt/bpagent/config/log_agent.example.yaml /opt/bpagent/config/log_agent.yaml
sed -i "s/project_id: PROJECT_ID/project_id: ${local.vc_proj}/g" /opt/bpagent/config/log_agent.yaml
sed -i "s/credentials_file: /#credentials_file: /g" /opt/bpagent/config/log_agent.yaml
systemctl stop bpagent
systemctl start bpagent
  EOF
}

#-------------------------------------------------------
# GCVE VM Instance
#-------------------------------------------------------

resource "google_compute_instance" "gcve_mon" {
  project      = var.project_id
  name         = var.instance_name
  machine_type = "e2-medium"
  zone         = var.zone

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-10"
    }
  }

  metadata = {
    startup-script = local.startup_script
  }

  network_interface {
    network       = var.network
  }
 
  service_account {
    email  = google_service_account.gcve_mon_sa.email
    scopes = ["cloud-platform"]
  }
}

#-------------------------------------------------------
# GCVE Monitor Service Account
#-------------------------------------------------------

resource "google_service_account" "gcve_mon_sa" {
  project      = var.project_id
  account_id   = var.gcve_mon_sa
  display_name = "GCVE Service Account"
}

module "projects_iam_bindings" {
  source  = "terraform-google-modules/iam/google//modules/projects_iam"
  version = "~> 6.4"

    projects = [var.project_id]
    mode     = "authoritative"

    bindings = {
    "roles/monitoring.admin" = [
      "serviceAccount:${google_service_account.gcve_mon_sa.email}"
    ]
    "roles/logging.logWriter" = [
      "serviceAccount:${google_service_account.gcve_mon_sa.email}"
    ]
    "roles/secretmanager.secretAccessor" = [
      "serviceAccount:${google_service_account.gcve_mon_sa.email}"
    ]
  }
}

# ----------------------------------------------------------------------------
# APIs to enable
# ----------------------------------------------------------------------------
resource "google_project_service" "monitoring_api" {
  project                    = var.project_id
  service                    = "monitoring.googleapis.com"
  disable_dependent_services = false
  disable_on_destroy         = false
}

